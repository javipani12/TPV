package Interfaz;

import BD.GestionBD;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import Modelos.Producto;
import Modelos.Productos;
import Modelos.Usuario;
import Modelos.Usuarios;
import Modelos.Venta;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author Manuel López y Javier Fernández
 */
public class VentanaGestion extends javax.swing.JFrame {

    // Objeto para conectarno a la BD
    private GestionBD conexion;

    // Listados de Usuarios, Productos
    private Productos listaProductos;
    private Usuarios listaUsuarios;

    // Modelo JList de Productos y Usuarios
    private DefaultListModel modeloJlistProductos;
    private DefaultListModel modeloJlistUsuarios;
    
    // Variable para el Fichero seleccionado
    private File ficheroSeleccionado;
    
    private static Venta venta;

    /**
     * Creates new form Interfaz
     */
    public VentanaGestion(Venta venta) {
        this.venta = venta;
        
        System.out.println("Gestión");
        for (Producto producto : this.venta.getProductos().obtenerListaProductos()) {
            System.out.println(producto.toString());
        }
        
        for (Integer unidad : this.venta.getUnidades()) {
            System.out.println(unidad);
        }
        
        // Inicializamos los datos de Modelos
        modeloJlistProductos = new DefaultListModel();
        modeloJlistUsuarios = new DefaultListModel();

        // Inicializamos listado de Productos y Usuarios
        listaProductos = new Productos();
        listaUsuarios = new Usuarios();
        

        // Creamos la conexión a la BD
        conexion = new GestionBD("localhost", "usuario",
                "usuario", "tpv"
        );

        try {
            // Cargamos los Productos y los Usuarios
            listaProductos = conexion.listarProductos();
        } catch (IOException ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        listaUsuarios = conexion.listarUsuarios();
        
        cargarProductos();
        cargarUsuarios();
        
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPanePrincipal = new javax.swing.JTabbedPane();
        TabUsuarios = new javax.swing.JPanel();
        PanelListadoUsuarios = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListUsuarios = new javax.swing.JList<>();
        PanelDetalleUsuarios = new javax.swing.JPanel();
        jLabelUsuarioID = new javax.swing.JLabel();
        JTexFieldUsuarioID = new javax.swing.JTextField();
        jLabelUsuarioNombre = new javax.swing.JLabel();
        JTexFieldUsuarioNombre = new javax.swing.JTextField();
        BtGuardarUsuario = new javax.swing.JButton();
        BtNuevoUsuario = new javax.swing.JButton();
        BtBorrarUsuario = new javax.swing.JButton();
        JTexFieldUsuarioApellidos = new javax.swing.JTextField();
        jLabelUsuarioApellidos = new javax.swing.JLabel();
        JTexFieldUsuarioLogin = new javax.swing.JTextField();
        jLabelUsuarioLogin = new javax.swing.JLabel();
        jLabelUsuarioPassword = new javax.swing.JLabel();
        JTexFieldUsuarioPassword = new javax.swing.JTextField();
        jLabelUsuarioRol = new javax.swing.JLabel();
        JTexFieldUsuarioRol = new javax.swing.JTextField();
        TabProductos = new javax.swing.JPanel();
        PanelListadoProductos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListProductos = new javax.swing.JList<>();
        PanelDetalleProductos = new javax.swing.JPanel();
        jLabelCodProducto = new javax.swing.JLabel();
        JTexFieldCodProducto = new javax.swing.JTextField();
        jLabelNombre = new javax.swing.JLabel();
        JTexFieldProductoNombre = new javax.swing.JTextField();
        BtGuardarProducto = new javax.swing.JButton();
        BtNuevoProducto = new javax.swing.JButton();
        BtBorrarProducto = new javax.swing.JButton();
        jLabelPVP = new javax.swing.JLabel();
        jLabelStock = new javax.swing.JLabel();
        spinnerProductoPVP = new javax.swing.JSpinner();
        txtRutaFichero = new javax.swing.JTextField();
        Abrir = new javax.swing.JButton();
        spinnerProductoStock = new javax.swing.JSpinner();
        jLabelFoto = new javax.swing.JLabel();
        jLabelProductoImagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TPV Gestión");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        PanelListadoUsuarios.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado:"));

        jListUsuarios.setModel(modeloJlistUsuarios);
        jListUsuarios.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListUsuariosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListUsuarios);

        javax.swing.GroupLayout PanelListadoUsuariosLayout = new javax.swing.GroupLayout(PanelListadoUsuarios);
        PanelListadoUsuarios.setLayout(PanelListadoUsuariosLayout);
        PanelListadoUsuariosLayout.setHorizontalGroup(
            PanelListadoUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelListadoUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelListadoUsuariosLayout.setVerticalGroup(
            PanelListadoUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelListadoUsuariosLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        PanelDetalleUsuarios.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle:"));

        jLabelUsuarioID.setText("ID:");

        JTexFieldUsuarioID.setEditable(false);
        JTexFieldUsuarioID.setEnabled(false);
        JTexFieldUsuarioID.setPreferredSize(new java.awt.Dimension(70, 23));

        jLabelUsuarioNombre.setText("Nombre:");

        BtGuardarUsuario.setText("GUARDAR");
        BtGuardarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtGuardarUsuarioActionPerformed(evt);
            }
        });

        BtNuevoUsuario.setText("NUEVO");
        BtNuevoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtNuevoUsuarioActionPerformed(evt);
            }
        });

        BtBorrarUsuario.setText("BORRAR");
        BtBorrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtBorrarUsuarioActionPerformed(evt);
            }
        });

        jLabelUsuarioApellidos.setText("Apellidos:");

        jLabelUsuarioLogin.setText("Login:");

        jLabelUsuarioPassword.setText("Contraseña:");

        jLabelUsuarioRol.setText("Rol:");

        javax.swing.GroupLayout PanelDetalleUsuariosLayout = new javax.swing.GroupLayout(PanelDetalleUsuarios);
        PanelDetalleUsuarios.setLayout(PanelDetalleUsuariosLayout);
        PanelDetalleUsuariosLayout.setHorizontalGroup(
            PanelDetalleUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDetalleUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDetalleUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDetalleUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(JTexFieldUsuarioApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(PanelDetalleUsuariosLayout.createSequentialGroup()
                            .addGroup(PanelDetalleUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelUsuarioID)
                                .addComponent(JTexFieldUsuarioID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelUsuarioNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(JTexFieldUsuarioNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelUsuarioApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(135, 135, 135)))
                    .addGroup(PanelDetalleUsuariosLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(BtGuardarUsuario)
                        .addGap(18, 18, 18)
                        .addComponent(BtNuevoUsuario)
                        .addGap(18, 18, 18)
                        .addComponent(BtBorrarUsuario))
                    .addComponent(jLabelUsuarioLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsuarioPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsuarioRol, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelDetalleUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(JTexFieldUsuarioLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addComponent(JTexFieldUsuarioPassword, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(JTexFieldUsuarioRol, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        PanelDetalleUsuariosLayout.setVerticalGroup(
            PanelDetalleUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDetalleUsuariosLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabelUsuarioID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTexFieldUsuarioID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelUsuarioNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTexFieldUsuarioNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelUsuarioApellidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTexFieldUsuarioApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelUsuarioLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTexFieldUsuarioLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelUsuarioPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTexFieldUsuarioPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelUsuarioRol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTexFieldUsuarioRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(PanelDetalleUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtGuardarUsuario)
                    .addComponent(BtNuevoUsuario)
                    .addComponent(BtBorrarUsuario))
                .addContainerGap())
        );

        javax.swing.GroupLayout TabUsuariosLayout = new javax.swing.GroupLayout(TabUsuarios);
        TabUsuarios.setLayout(TabUsuariosLayout);
        TabUsuariosLayout.setHorizontalGroup(
            TabUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TabUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelListadoUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PanelDetalleUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        TabUsuariosLayout.setVerticalGroup(
            TabUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TabUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelDetalleUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelListadoUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPanePrincipal.addTab("Usuarios", TabUsuarios);

        PanelListadoProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado:"));

        jListProductos.setModel(modeloJlistProductos);
        jListProductos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListProductosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListProductos);

        javax.swing.GroupLayout PanelListadoProductosLayout = new javax.swing.GroupLayout(PanelListadoProductos);
        PanelListadoProductos.setLayout(PanelListadoProductosLayout);
        PanelListadoProductosLayout.setHorizontalGroup(
            PanelListadoProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelListadoProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelListadoProductosLayout.setVerticalGroup(
            PanelListadoProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelListadoProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        PanelDetalleProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle:"));

        jLabelCodProducto.setText("Código Producto:");

        JTexFieldCodProducto.setEditable(false);
        JTexFieldCodProducto.setEnabled(false);
        JTexFieldCodProducto.setPreferredSize(new java.awt.Dimension(70, 23));

        jLabelNombre.setText("Nombre:");

        BtGuardarProducto.setText("GUARDAR");
        BtGuardarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtGuardarProductoActionPerformed(evt);
            }
        });

        BtNuevoProducto.setText("NUEVO");
        BtNuevoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtNuevoProductoActionPerformed(evt);
            }
        });

        BtBorrarProducto.setText("BORRAR");
        BtBorrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtBorrarProductoActionPerformed(evt);
            }
        });

        jLabelPVP.setText("PVP");

        jLabelStock.setText("Stock:");

        spinnerProductoPVP.setModel(new javax.swing.SpinnerNumberModel(1.0d, 1.0d, null, 1.0d));
        spinnerProductoPVP.setMinimumSize(new java.awt.Dimension(70, 30));
        spinnerProductoPVP.setPreferredSize(new java.awt.Dimension(70, 30));

        txtRutaFichero.setBorder(javax.swing.BorderFactory.createTitledBorder("Ruta seleccionada:"));

        Abrir.setText("Seleccionar");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });

        spinnerProductoStock.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 10));
        spinnerProductoStock.setMinimumSize(new java.awt.Dimension(70, 30));
        spinnerProductoStock.setPreferredSize(new java.awt.Dimension(70, 30));

        jLabelFoto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabelProductoImagen.setText("Imagen producto:");

        javax.swing.GroupLayout PanelDetalleProductosLayout = new javax.swing.GroupLayout(PanelDetalleProductos);
        PanelDetalleProductos.setLayout(PanelDetalleProductosLayout);
        PanelDetalleProductosLayout.setHorizontalGroup(
            PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDetalleProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDetalleProductosLayout.createSequentialGroup()
                        .addGroup(PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spinnerProductoPVP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelPVP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spinnerProductoStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTexFieldProductoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(JTexFieldCodProducto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelCodProducto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelDetalleProductosLayout.createSequentialGroup()
                        .addComponent(jLabelProductoImagen)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDetalleProductosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtRutaFichero, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Abrir)
                        .addGap(18, 18, 18))))
            .addGroup(PanelDetalleProductosLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(BtGuardarProducto)
                .addGap(18, 18, 18)
                .addComponent(BtNuevoProducto)
                .addGap(18, 18, 18)
                .addComponent(BtBorrarProducto)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelDetalleProductosLayout.setVerticalGroup(
            PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDetalleProductosLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabelCodProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDetalleProductosLayout.createSequentialGroup()
                        .addComponent(JTexFieldCodProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTexFieldProductoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelPVP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerProductoPVP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerProductoStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabelProductoImagen)
                .addGap(18, 18, 18)
                .addGroup(PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRutaFichero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(PanelDetalleProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtGuardarProducto)
                    .addComponent(BtNuevoProducto)
                    .addComponent(BtBorrarProducto))
                .addContainerGap())
        );

        javax.swing.GroupLayout TabProductosLayout = new javax.swing.GroupLayout(TabProductos);
        TabProductos.setLayout(TabProductosLayout);
        TabProductosLayout.setHorizontalGroup(
            TabProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelListadoProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PanelDetalleProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        TabProductosLayout.setVerticalGroup(
            TabProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TabProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TabProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelListadoProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelDetalleProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPanePrincipal.addTab("Productos", TabProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePrincipal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePrincipal)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtBorrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtBorrarUsuarioActionPerformed
        // Creamos un objeto Usuario
        Usuario usuario = new Usuario();

        // Asignamos los valores de la interfaz
        // Comprobamos que el ID existe
        if (!JTexFieldUsuarioID.getText().isBlank()) {
            usuario.setIdUsuario(Integer.parseInt(JTexFieldUsuarioID.getText()));
        }
        // Usamos el método para borrar el Usuario
        borrarUsuario(usuario);
    }//GEN-LAST:event_BtBorrarUsuarioActionPerformed

    private void BtNuevoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtNuevoUsuarioActionPerformed
        limpiarDetallesUsuarios();
    }//GEN-LAST:event_BtNuevoUsuarioActionPerformed

    private void BtGuardarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtGuardarUsuarioActionPerformed
        // Creamos un objeto Usuario, guardamos la contraseña en una
        // variable y generamos un array de números
        Usuario usuario = new Usuario();
        String password = JTexFieldUsuarioPassword.getText();
        int[] numeros = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
        boolean contieneNumero = false;
        
        // Recorremos la contraseña y comprobamos si la posición en la que está
        // la iteración contiene un número del array
        for (int i = 0; i < password.length(); i++) {
            for (int j = 0; j < numeros.length; j++) {
                if (password.charAt(i) == Integer.toString(numeros[j]).charAt(0)) {
                    // Si contiene un número cambiamos el valor 
                    // de contieneNumero a true
                    contieneNumero = true;
                }
            }
        }
        
        // Si la contraseña contiene algún carácter diferente a un número
        // mostramos un mensaje de error
        if (!contieneNumero) {
            // Mostramos mensaje de error
            JOptionPane.showMessageDialog( null, 
                            "La contraseña contiene algún carácter diferente"
                            + " a un número. Solo se admiten números");
        } else {
            
            usuario.setPasswd(Integer.valueOf(password));
            
            if (!JTexFieldUsuarioID.getText().isBlank()) {
                usuario.setIdUsuario(Integer.parseInt(JTexFieldUsuarioID.getText()));
            }
            
            String rol = JTexFieldUsuarioRol.getText();
            
            if (rol.equalsIgnoreCase("administrador")) {
                usuario.setRol(true);
            } else if(rol.equalsIgnoreCase("usuario")) {
                usuario.setRol(false);
            } else {
                JOptionPane.showMessageDialog( null, "Rol "
                        + "no válido, solamente Administrador o Usurio");
            }

            // Asignamos los valores al usuario
            usuario.setNombre(JTexFieldUsuarioNombre.getText());
            usuario.setApellidos(JTexFieldUsuarioApellidos.getText());
            usuario.setLogin(JTexFieldUsuarioLogin.getText());

            // Comprobamos que el resto de campos estén llenos
            if (usuario.getNombre().length() == 0 || 
                usuario.getApellidos().length() == 0 ||
                usuario.getLogin().length() == 0)
            {
                JOptionPane.showMessageDialog( null, "Alguno de "
                        + "los campos está vacío. Todo deben estar llenos");
            } else {
                guardarUsuario(usuario);
            }
            
        }
    }//GEN-LAST:event_BtGuardarUsuarioActionPerformed

    private void jListUsuariosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListUsuariosValueChanged
        mostrarDatosUsuarios(jListUsuarios.getSelectedIndex());
    }//GEN-LAST:event_jListUsuariosValueChanged

    private void BtBorrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtBorrarProductoActionPerformed
        // Creamos un objeto Producto
        Producto producto = new Producto();

        if (!JTexFieldCodProducto.getText().isBlank()) {
            producto.setCodProducto(Integer.parseInt(JTexFieldCodProducto.getText()));
        }

        borrarProducto(producto);
    }//GEN-LAST:event_BtBorrarProductoActionPerformed

    private void BtNuevoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtNuevoProductoActionPerformed
        limpiarDetallesProductos();
    }//GEN-LAST:event_BtNuevoProductoActionPerformed

    private void BtGuardarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtGuardarProductoActionPerformed
        // Creamos un objeto Producto
        Producto producto = new Producto();
        
        if (!JTexFieldCodProducto.getText().isBlank()) {
            producto.setCodProducto(Integer.parseInt(JTexFieldCodProducto.getText()));
        }
        
        if (ficheroSeleccionado != null) {
            ImageIcon imagen = new ImageIcon(ficheroSeleccionado.toString());
            producto.setImagen(imagen);
        }
        
        producto.setNombre(JTexFieldProductoNombre.getText());
        producto.setPvp((double) spinnerProductoPVP.getValue());
        producto.setStock(Integer.parseInt(spinnerProductoStock.getValue().toString()));
        
        System.out.println(producto.toString());
        
        if (producto.getNombre().length() == 0) {
            JOptionPane.showMessageDialog( null, "El nombre "
                    + "del producto no es válido");
        }
        
        guardarProducto(producto);
    }//GEN-LAST:event_BtGuardarProductoActionPerformed

    private void jListProductosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListProductosValueChanged
        mostrarDatosProductos(jListProductos.getSelectedIndex());
    }//GEN-LAST:event_jListProductosValueChanged

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // Establecemos el defultCloseOperation a Dispose, de manera
        // que cuando cerremos esta ventana no se cierre el programa.
        // En este evento actual, al cerrar la ventana nos llevará 
        // a la Ventana de Productos.
        JOptionPane.showMessageDialog( null, 
                "Volverás a la pantalla de Productos");
        
        this.setVisible(false);
        VentanaProductos ventanaProductos = new VentanaProductos(venta);
        ventanaProductos.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        JFileChooser chooser = new JFileChooser();
        // optionally set chooser options ...
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            ficheroSeleccionado = chooser.getSelectedFile();
            // read  and/or display the file somehow. ....
            this.txtRutaFichero.setText(ficheroSeleccionado.getPath());
        } else {
            // user changed their mind
        }
    }//GEN-LAST:event_AbrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaGestion(venta).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abrir;
    private javax.swing.JButton BtBorrarProducto;
    private javax.swing.JButton BtBorrarUsuario;
    private javax.swing.JButton BtGuardarProducto;
    private javax.swing.JButton BtGuardarUsuario;
    private javax.swing.JButton BtNuevoProducto;
    private javax.swing.JButton BtNuevoUsuario;
    private javax.swing.JTextField JTexFieldCodProducto;
    private javax.swing.JTextField JTexFieldProductoNombre;
    private javax.swing.JTextField JTexFieldUsuarioApellidos;
    private javax.swing.JTextField JTexFieldUsuarioID;
    private javax.swing.JTextField JTexFieldUsuarioLogin;
    private javax.swing.JTextField JTexFieldUsuarioNombre;
    private javax.swing.JTextField JTexFieldUsuarioPassword;
    private javax.swing.JTextField JTexFieldUsuarioRol;
    private javax.swing.JPanel PanelDetalleProductos;
    private javax.swing.JPanel PanelDetalleUsuarios;
    private javax.swing.JPanel PanelListadoProductos;
    private javax.swing.JPanel PanelListadoUsuarios;
    private javax.swing.JPanel TabProductos;
    private javax.swing.JPanel TabUsuarios;
    private javax.swing.JLabel jLabelCodProducto;
    private javax.swing.JLabel jLabelFoto;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelPVP;
    private javax.swing.JLabel jLabelProductoImagen;
    private javax.swing.JLabel jLabelStock;
    private javax.swing.JLabel jLabelUsuarioApellidos;
    private javax.swing.JLabel jLabelUsuarioID;
    private javax.swing.JLabel jLabelUsuarioLogin;
    private javax.swing.JLabel jLabelUsuarioNombre;
    private javax.swing.JLabel jLabelUsuarioPassword;
    private javax.swing.JLabel jLabelUsuarioRol;
    private javax.swing.JList<String> jListProductos;
    private javax.swing.JList<String> jListUsuarios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPanePrincipal;
    private javax.swing.JSpinner spinnerProductoPVP;
    private javax.swing.JSpinner spinnerProductoStock;
    private javax.swing.JTextField txtRutaFichero;
    // End of variables declaration//GEN-END:variables

    /**
     * Método para escalar la imagen del producto al tamaño del jLabel que
     * la muestra
     * @param imagen ImageIcon - Imagen del producto a escalar
     */
    public void escalarImagen(ImageIcon imagen){
        Image img = imagen.getImage();
        Image imgAEscalar = img.getScaledInstance(jLabelFoto.getWidth(), jLabelFoto.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon imgEscalada = new ImageIcon(imgAEscalar);
        jLabelFoto.setIcon(imgEscalada);
    }
    
    // --------------- MÉTODOS PROODUCTO ---------------------
    
    /**
     * Método para cargar los Productos de la BD en el jList de
     * Productos
     */
    private void cargarProductos() {
        // Limpiar el listado 
        modeloJlistProductos.clear();       
        
        try {
            // Actualizar el listado
            listaProductos = conexion.listarProductos();
        } catch (IOException ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        
        // Debemos recoger los datos de listaProductos y cargarlas en su jList
        for (Producto producto : listaProductos.obtenerListaProductos()) {
            modeloJlistProductos.addElement(producto.getNombre());
        }
    }
    
    /**
     * Método para cargar los datos del Producto seleccionado en Detalles
     * @param i - Índice del producto seleccionado
     */
    private void mostrarDatosProductos(int i) {
        if ( i >= 0) {
            Producto producto = listaProductos.obtenerProductoPorPosicion(i);
            JTexFieldCodProducto.setText(String.valueOf(producto.getCodProducto()));
            JTexFieldProductoNombre.setText(producto.getNombre());
            spinnerProductoPVP.setValue(producto.getPvp());
            spinnerProductoStock.setValue(producto.getStock());
            escalarImagen(producto.getImagen());
        }
    }
    
    /**
     * Borra el contenido de los campos de Detalles del Producto
     */
    private void limpiarDetallesProductos() {
        JTexFieldCodProducto.setText("");
        JTexFieldProductoNombre.setText("");
        spinnerProductoPVP.setValue(1);
        spinnerProductoStock.setValue(1);
        txtRutaFichero.setText("");
        jLabelFoto.setIcon(null);
        ficheroSeleccionado = null;
    }
    
    /**
     * Método para guardar un Producto nuevo en la BD o actualizar uno 
     * que ya exista en ella
     * @param producto Producto - Producto a guardar
     */
    private void guardarProducto( Producto producto ){
        
        if ( producto.getCodProducto() == -1 ) {
            try {
                // No está insertado, lo insertamos
                conexion.insertarProducto(producto);
            } catch (FileNotFoundException ex) {
                System.out.println("Error: " + ex.getMessage());
            }
            // Mostramos el último producto insertado
            cargarProductos();
            jListProductos.setSelectedIndex(listaProductos.size() - 1);
        } else {
            // Si ya tiene un ID asignado, actualizar
            conexion.modificarProducto(producto, producto);
            // Guardamos posicion actual del JList
            int posSel = jListProductos.getSelectedIndex();
            // Actualizamos el listado de productos
            cargarProductos();
            // Establecer posicion anterior del jlist
            jListProductos.setSelectedIndex(posSel);
        }
    }
    
    /**
     * Método para borrar un producto de la BD
     * @param producto Producto - Producto que queremos borrar
     */
    private void borrarProducto( Producto producto ) {
        
        // Comprobamos que el dpto a borrar es válido
        if (producto.getCodProducto() > -1) {
            conexion.borrarProducto(producto);
            // Actualizamos el listado de dptos
            cargarProductos();
            // Seleccionamos el último producto
            if (listaProductos.size() == 0) {
                limpiarDetallesProductos();
            } else {
                jListProductos.setSelectedIndex(listaProductos.size() - 1);
            }
        } else {
            System.err.println("El Producto no existe en la BD");
        }        
    }
    
    
    
    // --------------- MÉTODOS USUARIOS ---------------------
        
    /**
     * Método para cargar los Usuarios de la BD en el jList de Usuarios
     */
    private void cargarUsuarios() {
        // Limpiamos el listado
        modeloJlistUsuarios.clear();
        // Actualizar el listado
        listaUsuarios = conexion.listarUsuarios();
        // Debemos recoger los datos de listaUsuarios y cargarlas en su jList
        for (Usuario usuario : listaUsuarios.obtenerListaUsuarios()) {
            modeloJlistUsuarios.addElement(usuario.getNombre());
        }
    }

    /**
     * Método para cargar los datos del Usuario seleccionado en Detalles
     * @param indiceSeleccionado - Índice del usuario seleccionado
     */
    private void mostrarDatosUsuarios(int indiceSeleccionado) {
        if ( indiceSeleccionado >= 0) {
            Usuario usuario = listaUsuarios.obtenerUsuarioPorPosicion(indiceSeleccionado);
            JTexFieldUsuarioID.setText(String.valueOf(usuario.getIdUsuario()));
            JTexFieldUsuarioNombre.setText(usuario.getNombre());
            JTexFieldUsuarioApellidos.setText(usuario.getApellidos());
            JTexFieldUsuarioLogin.setText(usuario.getLogin());
            JTexFieldUsuarioPassword.setText(String.valueOf(usuario.getPasswd()));
            
            if (usuario.isRol()) {
                JTexFieldUsuarioRol.setText("Administrador");
            } else {
                JTexFieldUsuarioRol.setText("Usuario");
            }
        }
    }
    
    /**
     * Método para limpiar todos los campos de Detalles del Usuario
     */
    private void limpiarDetallesUsuarios(){
        JTexFieldUsuarioID.setText("");
        JTexFieldUsuarioNombre.setText("");
        JTexFieldUsuarioApellidos.setText("");
        JTexFieldUsuarioLogin.setText("");
        JTexFieldUsuarioPassword.setText("");
        JTexFieldUsuarioRol.setText("");
    }

    /**
     * Método para actualizar o insertar un Usuario en la BBDD, esto se hará en 
     * función de si el Usuario que se recibe como parámetro tiene o no id 
     * respectivamente
     * @param usuario Usuario - Usuario que vamos a actualizar o añadir
     */
    private void guardarUsuario(Usuario usuario) {
        if (usuario.getIdUsuario() == -1) {
            // Insertamos el usuario
            conexion.insertarUsuario(usuario);
            // Actualizamos la lista de usuarios que se muesta
            cargarUsuarios();
            // Seleccionamos el último usuario
            jListUsuarios.setSelectedIndex(listaUsuarios.size() - 1);
        } else {
            // Actualizamos los datos del usuario
            conexion.modificarUsuario(usuario, usuario);
            // Obtenemos la posición seleccionada
            int posSel = jListUsuarios.getSelectedIndex();
            // Actualizamos la lista de usuarios que se muesta
            cargarUsuarios();
            // Seleccionamos el último usuario
            jListUsuarios.setSelectedIndex(posSel);
        }
    }

    /**
     * Método para borrar un Usuario de la BD
     * @param usuario Usuario - Usuario que queremos borrar
     */
    private void borrarUsuario(Usuario usuario) {
        if (usuario.getIdUsuario() > -1) {
            // Borramos el usuario
            conexion.borrarUsuario(usuario);
            // Actualizamos la lista de usuarios que se muesta
            cargarUsuarios();
            // Seleccionamos el último usuario
            if (listaUsuarios.size() == 0) {
                limpiarDetallesUsuarios();
            } else {
                jListUsuarios.setSelectedIndex(listaUsuarios.size() - 1);
            }
        }
    }
}