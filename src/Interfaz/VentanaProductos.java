package Interfaz;

import BD.GestionBD;
import Informe.Informe;
import Modelos.Producto;
import Modelos.Productos;
import Modelos.Usuario;
import Modelos.Venta;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Manuel López y Javier Fernández
 */
public class VentanaProductos extends javax.swing.JFrame {
    
    // Propiedades de la clase
    private GestionBD conexion;
    private static Venta venta;
    private Informe informe;
    private int cantidad;
    private ArrayList<JButton> listaBotonesProductos;
    private ArrayList<Producto> listaAccionesProductos;
    private ArrayList<Integer> listaAccionesUnidades;
    
    public VentanaProductos( Venta venta ) {
        // Creamos la conexión a la BD e inicializamos la lista de botones
        conexion = new GestionBD("localhost", "usuario",
                "usuario", "tpv"
        );
        
        this.listaAccionesProductos = new ArrayList();
        this.listaAccionesUnidades = new ArrayList();
        this.listaBotonesProductos = new ArrayList();
        this.venta = venta;
        this.cantidad = 1;
        initComponents();
        annadirBotonesProductos();
        comprobarRolUsuarioLogueado(venta.getUsuario());
        borrarCuenta();
        
        Reloj reloj = new Reloj(this);
        reloj.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelProductos = new javax.swing.JPanel();
        jPanelHora = new javax.swing.JPanel();
        jLabelFechaHora = new javax.swing.JLabel();
        jPanelDatosUsuario = new javax.swing.JPanel();
        jLabelDatosUsuario = new javax.swing.JLabel();
        jPanelDatosVenta = new javax.swing.JPanel();
        jButtonGenerarVenta = new javax.swing.JButton();
        jButtonDeshacer = new javax.swing.JButton();
        jButtonBorrarCuenta = new javax.swing.JButton();
        jButtonSumar1 = new javax.swing.JButton();
        jButtonSumar5 = new javax.swing.JButton();
        jButtonSumar10 = new javax.swing.JButton();
        jButtonGenerarInforme = new javax.swing.JButton();
        jPanelAdministrador = new javax.swing.JPanel();
        jButtonVentanaAdministrador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TPV");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanelProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos"));
        jPanelProductos.setMinimumSize(new java.awt.Dimension(750, 650));
        jPanelProductos.setPreferredSize(new java.awt.Dimension(750, 650));
        jPanelProductos.setLayout(new java.awt.GridLayout(0, 4));

        jPanelHora.setBorder(javax.swing.BorderFactory.createTitledBorder("Panel Hora"));
        jPanelHora.setMinimumSize(new java.awt.Dimension(360, 100));
        jPanelHora.setPreferredSize(new java.awt.Dimension(360, 100));

        jLabelFechaHora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFechaHora.setText("Fecha y hora");

        javax.swing.GroupLayout jPanelHoraLayout = new javax.swing.GroupLayout(jPanelHora);
        jPanelHora.setLayout(jPanelHoraLayout);
        jPanelHoraLayout.setHorizontalGroup(
            jPanelHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHoraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelFechaHora, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelHoraLayout.setVerticalGroup(
            jPanelHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHoraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelFechaHora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelDatosUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Usuario"));
        jPanelDatosUsuario.setMinimumSize(new java.awt.Dimension(360, 100));
        jPanelDatosUsuario.setPreferredSize(new java.awt.Dimension(360, 100));

        jLabelDatosUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDatosUsuario.setText("Nombre Apellidos - Rol");

        javax.swing.GroupLayout jPanelDatosUsuarioLayout = new javax.swing.GroupLayout(jPanelDatosUsuario);
        jPanelDatosUsuario.setLayout(jPanelDatosUsuarioLayout);
        jPanelDatosUsuarioLayout.setHorizontalGroup(
            jPanelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDatosUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDatosUsuarioLayout.setVerticalGroup(
            jPanelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDatosUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelDatosVenta.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Venta"));
        jPanelDatosVenta.setLayout(new java.awt.GridLayout(0, 1, 20, 15));

        jButtonGenerarVenta.setText("Generar Venta - XX€");
        jButtonGenerarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarVentaActionPerformed(evt);
            }
        });
        jPanelDatosVenta.add(jButtonGenerarVenta);

        jButtonDeshacer.setText("Deshacer");
        jButtonDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeshacerActionPerformed(evt);
            }
        });
        jPanelDatosVenta.add(jButtonDeshacer);

        jButtonBorrarCuenta.setText("Borrar Cuenta");
        jButtonBorrarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarCuentaActionPerformed(evt);
            }
        });
        jPanelDatosVenta.add(jButtonBorrarCuenta);

        jButtonSumar1.setText("Sumar de 1 en 1");
        jButtonSumar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSumar1ActionPerformed(evt);
            }
        });
        jPanelDatosVenta.add(jButtonSumar1);

        jButtonSumar5.setText("Sumar de 5 en 5");
        jButtonSumar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSumar5ActionPerformed(evt);
            }
        });
        jPanelDatosVenta.add(jButtonSumar5);

        jButtonSumar10.setText("Sumar de 10 en 10");
        jButtonSumar10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSumar10ActionPerformed(evt);
            }
        });
        jPanelDatosVenta.add(jButtonSumar10);

        jButtonGenerarInforme.setText("Generar Informe Ventas Usuario");
        jButtonGenerarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarInformeActionPerformed(evt);
            }
        });
        jPanelDatosVenta.add(jButtonGenerarInforme);

        jPanelAdministrador.setBorder(javax.swing.BorderFactory.createTitledBorder("Administrador"));

        jButtonVentanaAdministrador.setText("Ventana Administrador");
        jButtonVentanaAdministrador.setMaximumSize(new java.awt.Dimension(150, 80));
        jButtonVentanaAdministrador.setMinimumSize(new java.awt.Dimension(150, 80));
        jButtonVentanaAdministrador.setPreferredSize(new java.awt.Dimension(150, 80));
        jButtonVentanaAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVentanaAdministradorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAdministradorLayout = new javax.swing.GroupLayout(jPanelAdministrador);
        jPanelAdministrador.setLayout(jPanelAdministradorLayout);
        jPanelAdministradorLayout.setHorizontalGroup(
            jPanelAdministradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdministradorLayout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(jButtonVentanaAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAdministradorLayout.setVerticalGroup(
            jPanelAdministradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdministradorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonVentanaAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelDatosUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelAdministrador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanelDatosVenta, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDatosVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelHora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelDatosUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanelProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSumar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSumar1ActionPerformed
        actualizarCantidad(1);
    }//GEN-LAST:event_jButtonSumar1ActionPerformed

    private void jButtonSumar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSumar5ActionPerformed
        actualizarCantidad(5);
    }//GEN-LAST:event_jButtonSumar5ActionPerformed

    private void jButtonSumar10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSumar10ActionPerformed
        actualizarCantidad(10);
    }//GEN-LAST:event_jButtonSumar10ActionPerformed

    private void jButtonBorrarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarCuentaActionPerformed
        borrarCuenta();
    }//GEN-LAST:event_jButtonBorrarCuentaActionPerformed

    private void jButtonVentanaAdministradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVentanaAdministradorActionPerformed
        this.setVisible(false);
        borrarCuenta();
        VentanaGestion ventanaGestion = new VentanaGestion(venta);
        ventanaGestion.setVisible(true);
    }//GEN-LAST:event_jButtonVentanaAdministradorActionPerformed

    private void jButtonGenerarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarVentaActionPerformed
        VentanaVenta ventanaVenta = new VentanaVenta(this, venta, conexion);
        ventanaVenta.setVisible(true);
        
        System.out.println("Productos");
        for (Producto producto : venta.getProductos().obtenerListaProductos()) {
            System.out.println(producto.toString());
        }
        
        for (Integer unidad : venta.getUnidades()) {
            System.out.println(unidad);
        }
    }//GEN-LAST:event_jButtonGenerarVentaActionPerformed

    private void jButtonGenerarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarInformeActionPerformed
        this.informe = new Informe(venta.getUsuario().getIdUsuario());
    }//GEN-LAST:event_jButtonGenerarInformeActionPerformed

    private void jButtonDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeshacerActionPerformed
        deshacer();
    }//GEN-LAST:event_jButtonDeshacerActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // Establecemos el defultCloseOperation a Dispose, de manera
        // que cuando cerremos esta ventana no se cierre el programa.
        // En este evento actual, al cerrar la ventana nos llevará 
        // a la Ventana de Login.
        JOptionPane.showMessageDialog( null, 
                "Volverás a la pantalla de Login");
        
        this.setVisible(false);
        VentanaLogin ventanaLogin = new VentanaLogin();
        ventanaLogin.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaProductos(venta).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrarCuenta;
    private javax.swing.JButton jButtonDeshacer;
    private javax.swing.JButton jButtonGenerarInforme;
    private javax.swing.JButton jButtonGenerarVenta;
    private javax.swing.JButton jButtonSumar1;
    private javax.swing.JButton jButtonSumar10;
    private javax.swing.JButton jButtonSumar5;
    private javax.swing.JButton jButtonVentanaAdministrador;
    private javax.swing.JLabel jLabelDatosUsuario;
    private javax.swing.JLabel jLabelFechaHora;
    private javax.swing.JPanel jPanelAdministrador;
    private javax.swing.JPanel jPanelDatosUsuario;
    private javax.swing.JPanel jPanelDatosVenta;
    private javax.swing.JPanel jPanelHora;
    private javax.swing.JPanel jPanelProductos;
    // End of variables declaration//GEN-END:variables

    /**
     * Método para comprobar el rol de Usuario actual, en función de este
     * aparecerá o no el panel y el botón de la Ventana de Gestión
     * @param usuario Usuario - Usuario a comprobar el rol
     */
    public void comprobarRolUsuarioLogueado(Usuario usuario){
        if (!usuario.isRol()) {
            jPanelAdministrador.setVisible(false);
            jButtonVentanaAdministrador.setVisible(false);
        }
        
        datosUsuario(usuario);
    }
    
    /**
     * Método para asignar al jLabel de los datos del Usuario los datos
     * correspondientes
     * @param usuario Usuario - Usuario del que se cogerán los datos
     */
    public void datosUsuario(Usuario usuario) {
        String datos = "";
        
        datos = usuario.getNombre() + " " + usuario.getApellidos();
        
        if (usuario.isRol()) {
            datos += " - Administrador"; 
        } else {
            datos += " - Usuario";
        }
        
        jLabelDatosUsuario.setText(datos);
    }
    
    /**
     * Método para actualizar la cantidad de productos que se van a introducir
     * en la venta
     * @param cantidadNueva int - Nuevo valor de la cantidad
     */
    public void actualizarCantidad(int cantidadNueva){
        this.cantidad = cantidadNueva;
    }
    
    /**
     * Método para borrar la cuenta actual
     */
    public void borrarCuenta(){
        venta.getProductos().obtenerListaProductos().clear();
        venta.getUnidades().clear();
        jButtonGenerarVenta.setText("Generar Venta - 0.0€");
        
        if(!listaAccionesProductos.isEmpty()){
            Producto ultimoProducto = listaAccionesProductos.get(listaAccionesProductos.size()-1);
            try {
                Productos productos = conexion.listarProductos();
                for (int i = 0; i < productos.size(); i++) {
                    if(ultimoProducto.getCodProducto() == (Integer.valueOf(listaBotonesProductos.get(i).getName()))){
                        listaBotonesProductos.get(i).setEnabled(true);
                    }
                }
            } catch (IOException ex) {
                System.err.println("Excepción recibida: " + ex.getMessage());
            }
        }
        
        listaAccionesProductos.clear();
        listaAccionesUnidades.clear();
    }
    
    /**
     * Método para volver al estado anterior de la venta, es decir, si se añade
     * un producto y posteriormente se añaden diez, si el botón es pulsado la
     * venta volvería a tener solamente un producto
     */
    public void deshacer(){
        if(!listaAccionesProductos.isEmpty()){
            Producto ultimoProducto = listaAccionesProductos.get(listaAccionesProductos.size()-1);
            venta.eliminarProductoDeLista(ultimoProducto, listaAccionesUnidades.get(listaAccionesUnidades.size()-1));
            if(venta.getProductos().obtenerListaProductos().indexOf(ultimoProducto)!= -1){
                if(venta.getUnidades().get(venta.getProductos().obtenerListaProductos().indexOf(ultimoProducto)) < ultimoProducto.getStock()){
                    try {
                        Productos productos = conexion.listarProductos();
                        for (int i = 0; i < productos.size(); i++) {
                            if(ultimoProducto.getCodProducto() == (Integer.valueOf(listaBotonesProductos.get(i).getName()))){
                                listaBotonesProductos.get(i).setEnabled(true);
                            }
                        }
                    } catch (IOException ex) {
                        System.err.println("Excepción recibida: " + ex.getMessage());
                    }
                }
            }
            listaAccionesProductos.remove(listaAccionesProductos.size()-1);
            listaAccionesUnidades.remove(listaAccionesUnidades.size()-1);
        }
        double total = round(venta.calcularTotal(), 2);
        jButtonGenerarVenta.setText("Generar Venta - " + total + "€");
    }
    
    /**
     * Método para añadir al panel de Productos tantos productos como haya
     * en la BBDD.
     */
    public void annadirBotonesProductos(){
        try {
            Productos productos = conexion.listarProductos();
            
            
            // Añadir botones al jPanel
            for (int i = 0; i < productos.size(); i++) {
                
                boolean disponible = true;
                // Comprobamos el stock del producto, si es 0 el botón saldrá
                // deshabilitado
                if (productos.obtenerProductoPorPosicion(i).getStock() == 0) {
                    disponible = false;
                }
                
                // Creamos un botón por producto, cuyo texto será el codProducto
                JButton boton = new JButton();
                boton.setName(productos.obtenerProductoPorPosicion(i).getCodProducto() + "");
                boton.setSize(150, 200);
                boton.setEnabled(disponible);
                
                // Ajustamos el tamaño de la imagen al tamaño establecido 
                // anteriormente
                Image img = productos.obtenerProductoPorPosicion(i).getImagen().getImage();
                Image imgAEscalar = img.getScaledInstance(boton.getWidth(), boton.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon imgEscalada = new ImageIcon(imgAEscalar);
                boton.setIcon(imgEscalada);
                
                // Añadimos el botón a la lista de botones
                listaBotonesProductos.add(boton);
            }
            
            // Añadir funcionalidad a los botones
            for (JButton boton : listaBotonesProductos) {
                // Añadimos al panel el botón de la iteración
                jPanelProductos.add(boton);
                boton.addActionListener(new ActionListener(){
                    @Override
                    // Añadimos la funcionalidad al pulsar sobre el botón 
                    // con una clase anónima
                    public void actionPerformed(ActionEvent e) {
                        // Recorremos la lista de Productos
                        for (int i = 0; i < productos.obtenerListaProductos().size(); i++) {
                            // Si alguno coincide con el codProducto,
                            // lo añadimos a la lista
                            Producto p = new Producto();
                            if (productos.obtenerListaProductos().get(i).getCodProducto() == Integer.valueOf(boton.getName())) {
                                p = productos.obtenerListaProductos().get(i);
                                venta.annadirProductoALista(p, cantidad);
                                // Registramos la acción en la lista de acciones
                                listaAccionesProductos.add(p);
                                listaAccionesUnidades.add(cantidad);
                                
                                // Comprabamos el stock, si es mayor o igual 
                                // del stock disponible, deshabilitamos el botón
                                int posicion = venta.getProductos().obtenerListaProductos().indexOf(p);
                                int cantidadSumada = venta.getUnidades().get(posicion);
                                if (cantidadSumada >= p.getStock()) {
                                    boton.setEnabled(false);
                                }
                            }
                        }
                        
                        double total = round(venta.calcularTotal(), 2);
                        jButtonGenerarVenta.setText("Generar Venta - " + total + "€");
                    }
                    
                });
                boton.setVisible(true);
            }
        } catch (IOException ex) {
            System.err.println("Error en el método annadirBotonesProductos(), " + 
                    ex.getMessage());
        }
    }
    
    /**
     * Método para redondear a x decimales a un valor de tipo double
     * @param valor double - Valor a redondear
     * @param decimales int - Decimales que queremos dejar en el número
     * @return 
     */
    public double round(double valor, int decimales) {
        if (decimales < 0) throw new IllegalArgumentException();

        BigDecimal bd = BigDecimal.valueOf(valor);
        bd = bd.setScale(decimales, RoundingMode.HALF_UP);
        return bd.doubleValue();
    }

    /**
     * Método para obtener el JLabel de la Fecha/Hora
     * @return JLabel - JLabel que contendrá la Fecha y la Hora
     */
    public JLabel getjLabelFechaHora() {
        return jLabelFechaHora;
    }

    /**
     * Método para establecer un nuevo JLabel al JLabel de Fecha/Hora
     * @param jLabelFechaHora JLabel - JLabel a establecer
     */
    public void setjLabelFechaHora(JLabel jLabelFechaHora) {
        this.jLabelFechaHora = jLabelFechaHora;
    }
    
    public void generarInforme(){
        
    }
    
}